{"version":3,"sources":["../../server/routes/products.js"],"names":["isPositiveInteger","test","s","admin","productsRouter","express","Router","verifyParameters","req","res","next","parameter","body","level","status","send","error","name","trim","length","minInvent","quantity","price","post","reqBody","newProduct","id","products","lastId","created","Date","productsList","push","productsMap","set","String","message","get","filter","product","params"],"mappings":";;;;;;AAAA;;;;AACA;;;;AAEA,IAAMA,oBAAoB,SAApBA,iBAAoB;AAAA,SAAK,mBAAkBC,IAAlB,CAAuBC,CAAvB;AAAL;AAAA,CAA1B;AACA,IAAMC,QAAQ,CAAd;AACA,IAAMC,iBAAiBC,kBAAQC,MAAR,EAAvB;;AAEA,IAAMC,mBAAmB,SAAnBA,gBAAmB,CAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAC3C,MAAMC,YAAYH,IAAII,IAAtB;AACA,MAAID,aAAaA,UAAUE,KAAV,KAAoBV,KAArC,EAA4C;AAC1CM,QAAIK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACnBC,aAAO,4CADY;AAEnBF,cAAQ;AAFW,KAArB;AAIA;AACD;AACD,MAAIH,aAAaA,UAAUM,IAAvB,IAA+BN,UAAUM,IAAV,CAAeC,IAAf,GAAsBC,MAAtB,GAA+B,CAA9D,IAAmEnB,kBAAkBW,UAAUS,SAA5B,CAAnE,IACCpB,kBAAkBW,UAAUU,QAA5B,CADD,IAC0CrB,kBAAkBW,UAAUW,KAA5B,CAD9C,EACkF;AAChFZ;AACD,GAHD,MAGO;AACLD,QAAIK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACnBC,aAAO,6GADY;AAEnBF,cAAQ;AAFW,KAArB;AAID;AACF,CAlBD;;AAqBAV,eAAemB,IAAf,CAAoB,GAApB,EAAyBhB,gBAAzB,EAA2C,UAACC,GAAD,EAAMC,GAAN,EAAc;AACvD,MAAMe,UAAUhB,IAAII,IAApB;AACA,MAAMa,aAAa;AACjBC,QAAIC,mBAASC,MAAT,GAAkB,CADL;AAEjBP,cAAUG,QAAQH,QAFD;AAGjBD,eAAWI,QAAQJ,SAHF;AAIjBE,WAAOE,QAAQF,KAJE;AAKjBL,UAAMO,QAAQP,IALG;AAMjBY,aAAS,IAAIC,IAAJ;AANQ,GAAnB;AAQAH,qBAASI,YAAT,CAAsBC,IAAtB,CAA2BP,UAA3B;AACAE,qBAASC,MAAT,IAAmB,CAAnB;AACAK,wBAAYC,GAAZ,CAAgBC,OAAOV,WAAWC,EAAlB,CAAhB,EAAuCD,UAAvC;AACAhB,MAAIM,IAAJ,CAAS;AACPqB,oBAAaX,WAAWR,IAAxB;AADO,GAAT;AAGD,CAhBD;;AAkBAb,eAAeiC,GAAf,CAAmB,GAAnB,EAAwB,UAAC7B,GAAD,EAAMC,GAAN,EAAc;AACpCA,MAAIM,IAAJ,CAASY,mBAASI,YAAT,CAAsBO,MAAtB,CAA6B;AAAA,WAAWC,QAAQlB,QAAR,GAAmB,CAA9B;AAAA,GAA7B,CAAT;AACD,CAFD;;AAIAjB,eAAeiC,GAAf,CAAmB,MAAnB,EAA2B,UAAC7B,GAAD,EAAMC,GAAN,EAAc;AACvC,MAAM8B,UAAUN,sBAAYI,GAAZ,CAAgBF,OAAO3B,IAAIgC,MAAJ,CAAWd,EAAlB,CAAhB,CAAhB;AACA,MAAIa,OAAJ,EAAa;AACX9B,QAAIM,IAAJ,CAAS;AACPqB,eAAS,eADF;AAEPG;AAFO,KAAT;AAID,GALD,MAKO;AACL9B,QAAIK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACnBC,aAAO;AADY,KAArB;AAGD;AACF,CAZD;;kBAeeZ,c","file":"products.js","sourcesContent":["import express from 'express';\r\nimport { products, productsMap } from '../models/products';\r\n\r\nconst isPositiveInteger = s => /^\\+?[1-9][\\d]*$/.test(s);\r\nconst admin = 2;\r\nconst productsRouter = express.Router();\r\n\r\nconst verifyParameters = (req, res, next) => {\r\n  const parameter = req.body;\r\n  if (parameter && parameter.level !== admin) {\r\n    res.status(403).send({\r\n      error: 'You are not allowed to modify this content',\r\n      status: 403,\r\n    });\r\n    return;\r\n  }\r\n  if (parameter && parameter.name && parameter.name.trim().length > 2 && isPositiveInteger(parameter.minInvent)\r\n    && isPositiveInteger(parameter.quantity) && isPositiveInteger(parameter.price)) {\r\n    next();\r\n  } else {\r\n    res.status(400).send({\r\n      error: 'Product name must be at least 3 characters with the minimum inventory, price and quantity greater than zero',\r\n      status: 400,\r\n    });\r\n  }\r\n};\r\n\r\n\r\nproductsRouter.post('/', verifyParameters, (req, res) => {\r\n  const reqBody = req.body;\r\n  const newProduct = {\r\n    id: products.lastId + 1,\r\n    quantity: reqBody.quantity,\r\n    minInvent: reqBody.minInvent,\r\n    price: reqBody.price,\r\n    name: reqBody.name,\r\n    created: new Date(),\r\n  };\r\n  products.productsList.push(newProduct);\r\n  products.lastId += 1;\r\n  productsMap.set(String(newProduct.id), newProduct);\r\n  res.send({\r\n    message: `'${newProduct.name}' successfully added`,\r\n  });\r\n});\r\n\r\nproductsRouter.get('/', (req, res) => {\r\n  res.send(products.productsList.filter(product => product.quantity > 0));\r\n});\r\n\r\nproductsRouter.get('/:id', (req, res) => {\r\n  const product = productsMap.get(String(req.params.id));\r\n  if (product) {\r\n    res.send({\r\n      message: 'product found',\r\n      product,\r\n    });\r\n  } else {\r\n    res.status(404).send({\r\n      error: 'cannot find product',\r\n    });\r\n  }\r\n});\r\n\r\n\r\nexport default productsRouter;\r\n"]}