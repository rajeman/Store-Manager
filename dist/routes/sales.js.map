{"version":3,"sources":["../../server/routes/sales.js"],"names":["salesRouter","express","Router","admin","post","verifyOrderInput","req","res","orderItem","orderDate","Date","orderId","orders","lastOrderId","totalPrice","productsArray","forEach","product","pricePerProduct","quantity","storeProduct","productsMap","get","String","productId","ordersList","push","ordersMap","set","send","message","order","level","query","status","error","attendantId","id","params","orderDetails"],"mappings":"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","file":"sales.js","sourcesContent":["import express from 'express';\r\nimport { verifyOrderInput } from '../helpers/validators';\r\nimport { orders, ordersMap } from '../models/orders';\r\nimport { productsMap } from '../models/products';\r\n\r\nconst salesRouter = express.Router();\r\nconst admin = 2;\r\n\r\nsalesRouter.post('/', verifyOrderInput, (req, res) => {\r\n  const { orderItem } = req;\r\n  orderItem.orderDate = new Date();\r\n  orderItem.orderId = orders.lastOrderId + 1;\r\n  orders.lastOrderId += 1;\r\n  let totalPrice = 0;\r\n  orderItem.productsArray.forEach((product) => {\r\n    totalPrice += product.pricePerProduct * product.quantity;\r\n    const storeProduct = productsMap.get(String(product.productId));\r\n    storeProduct.quantity -= product.quantity;\r\n  });\r\n  orderItem.totalPrice = totalPrice;\r\n  orders.ordersList.push(orderItem);\r\n  ordersMap.set(String(orderItem.orderId), orderItem);\r\n\r\n  res.send({\r\n    message: 'Successfully created order',\r\n    order: orderItem,\r\n  });\r\n});\r\n\r\nsalesRouter.get('/', (req, res) => {\r\n  const { level } = req.query;\r\n\r\n  if (level !== String(admin)) {\r\n    res.status(403).send({\r\n      error: 'You are not allowed to access this content',\r\n      status: 403,\r\n    });\r\n    return;\r\n  }\r\n  res.send({\r\n    message: 'Successfully fetched orders',\r\n    orders: orders.ordersList,\r\n  });\r\n});\r\n\r\nsalesRouter.get('/:id', (req, res) => {\r\n  const { level, attendantId } = req.query;\r\n  const { id } = req.params;\r\n  const orderDetails = ordersMap.get(String(id));\r\n\r\n  if (level === String(admin)) {\r\n    if (orderDetails) {\r\n      res.send({\r\n        message: 'Successfully fetched order',\r\n        orderDetails,\r\n      });\r\n    } else {\r\n      res.status(404).send({\r\n        error: 'Invalid order id',\r\n        status: 404,\r\n      });\r\n    }\r\n    return;\r\n  }\r\n\r\n  if (attendantId) {\r\n    if (!orderDetails) {\r\n      res.status(403).send({\r\n        error: 'You are not allowed to access this content',\r\n        status: 403,\r\n      });\r\n      return;\r\n    }\r\n    if (orderDetails && String(orderDetails.attendantId) === attendantId) {\r\n      res.send({\r\n        message: 'Successfully fetched order',\r\n        orderDetails,\r\n      });\r\n      return;\r\n    }\r\n  }\r\n  res.status(403).send({\r\n    error: 'You are not allowed to access this content',\r\n    status: 403,\r\n  });\r\n});\r\n\r\n\r\nexport default salesRouter;\r\n"]}